"use client";

import React, { useState, useEffect } from "react";
import styled, { createGlobalStyle } from "styled-components";
import { useRouter } from "next/navigation";

// ================ Global Styles ================
const GlobalStyles = createGlobalStyle`
  @tailwind base;
  @tailwind components;
  @tailwind utilities;

  :root {
    --background: #ffffff;
    --foreground: #171717;
  }

  @media (prefers-color-scheme: dark) {
    :root {
      --background: #0a0a0a;
      --foreground: #ededed;
    }
  }

  body {
    color: var(--foreground);
    background: var(--background);
    font-family: Arial, Helvetica, sans-serif;
  }

  /***************************************************
   * Generated by SVG Artista
   * MIT license (https://opensource.org/licenses/MIT)
   * W. https://svgartista.net
   **************************************************/

  /* Ejemplo para .svg-elem-4 → #49d397 */
  svg .svg-elem-4 {
    fill: transparent;
    transition: fill 0.7s cubic-bezier(0.6, -0.28, 0.735, 0.045) 1.1s;
  }
  svg.active .svg-elem-4 {
    fill: #49d397;
  }

  /* .svg-elem-5 → #579fef */
  svg .svg-elem-5 {
    fill: transparent;
    transition: fill 0.7s cubic-bezier(0.6, -0.28, 0.735, 0.045) 1.2s;
  }
  svg.active .svg-elem-5 {
    fill: #579fef;
  }

  /* .svg-elem-6 → #4d6fed */
  svg .svg-elem-6 {
    fill: transparent;
    transition: fill 0.7s cubic-bezier(0.6, -0.28, 0.735, 0.045) 1.3s;
  }
  svg.active .svg-elem-6 {
    fill: #4d6fed;
  }

  /* .svg-elem-7 a .svg-elem-15 → #3364cf */
  svg .svg-elem-7,
  svg .svg-elem-8,
  svg .svg-elem-9,
  svg .svg-elem-10,
  svg .svg-elem-11,
  svg .svg-elem-12,
  svg .svg-elem-13,
  svg .svg-elem-14,
  svg .svg-elem-15 {
    fill: transparent;
    transition: fill 0.7s cubic-bezier(0.6, -0.28, 0.735, 0.045) 1.4s;
  }
  svg.active .svg-elem-7,
  svg.active .svg-elem-8,
  svg.active .svg-elem-9,
  svg.active .svg-elem-10,
  svg.active .svg-elem-11,
  svg.active .svg-elem-12,
  svg.active .svg-elem-13,
  svg.active .svg-elem-14,
  svg.active .svg-elem-15 {
    fill: #3364cf;
  }
`;

// ============ Autenticación falsa ============
async function fakeLogin(username: string, password: string) {
  if (username === "test" && password === "123") return true;
  throw new Error("Usuario/contraseña inválidos");
}
async function fakeRegister(username: string, email: string, password: string) {
  if (!username || !email || !password) throw new Error("Datos incompletos");
  return true;
}

// ========== Componente del Logo Animado ==========
const AnimatedLogoInline: React.FC = () => {
  const [active, setActive] = useState(false);

  useEffect(() => {
    // Activamos la animación tras montar el componente
    const timer = setTimeout(() => setActive(true), 200);
    return () => clearTimeout(timer);
  }, []);

  return (
    <div>
      {/* Nuevo SVG convertido a JSX */}
      <svg
        xmlns="http://www.w3.org/2000/svg"
        xmlnsXlink="http://www.w3.org/1999/xlink"
        width="375"
        height="375"
        zoomAndPan="magnify"
        viewBox="0 0 375 374.999991"
        preserveAspectRatio="xMidYMid meet"
        version="1.0"
        className={active ? "active" : ""}
      >
        <defs>
          <g></g>
          <clipPath id="afe59d0000">
            <path
              d="M 160 96 L 309.734375 96 L 309.734375 282.890625 L 160 282.890625 Z M 160 96 "
              clipRule="nonzero"
              className="svg-elem-1"
            />
          </clipPath>
          <clipPath id="d00cb3a8a7">
            <path
              d="M 90 28.640625 L 307 28.640625 L 307 199 L 90 199 Z M 90 28.640625 "
              clipRule="nonzero"
              className="svg-elem-2"
            />
          </clipPath>
          <clipPath id="b0d0330c0a">
            <path
              d="M 87 96 L 234 96 L 234 282.890625 L 87 282.890625 Z M 87 96 "
              clipRule="nonzero"
              className="svg-elem-3"
            />
          </clipPath>
        </defs>
        <g clipPath="url(#afe59d0000)">
          <path
            fill="#49d397"
            d="M 282.605469 151.296875 L 282.605469 196.332031 C 291.546875 191.167969 300.488281 186.007812 309.425781 180.84375 L 309.429688 220.574219 L 275.019531 240.441406 C 275.023438 230.117188 275.023438 219.792969 275.019531 209.46875 L 236.019531 231.984375 L 236.019531 262.960938 L 201.609375 282.820312 L 201.609375 243.089844 L 275.019531 200.707031 L 275.019531 115.945312 L 309.425781 96.082031 L 309.429688 135.808594 Z M 194.929688 198.457031 L 194.925781 158.726562 L 160.519531 138.859375 L 160.515625 178.59375 Z M 194.929688 198.457031 "
            fillOpacity="1"
            fillRule="evenodd"
            className="svg-elem-4"
          />
        </g>
        <g clipPath="url(#d00cb3a8a7)">
          <path
            fill="#579fef"
            d="M 245.203125 86.511719 L 206.199219 63.992188 C 215.140625 58.832031 224.082031 53.667969 233.023438 48.507812 L 198.617188 28.640625 L 164.207031 48.511719 C 173.148438 53.667969 182.089844 58.832031 191.03125 63.992188 L 152.03125 86.511719 L 125.207031 71.023438 L 90.800781 90.890625 L 125.207031 110.757812 L 198.617188 68.375 L 272.023438 110.753906 L 306.429688 90.890625 L 272.023438 71.023438 Z M 201.609375 198.058594 L 201.613281 158.328125 L 236.019531 138.460938 L 236.023438 178.191406 Z M 201.609375 198.058594 "
            fillOpacity="1"
            fillRule="evenodd"
            className="svg-elem-5"
          />
        </g>
        <g clipPath="url(#b0d0330c0a)">
          <path
            fill="#4d6fed"
            d="M 113.933594 151.695312 L 113.933594 196.730469 C 104.992188 191.570312 96.050781 186.40625 87.113281 181.242188 L 87.109375 220.972656 L 121.519531 240.839844 C 121.515625 230.515625 121.515625 220.191406 121.519531 209.867188 L 160.519531 232.382812 L 160.519531 263.359375 L 194.929688 283.21875 L 194.929688 243.488281 L 121.519531 201.105469 L 121.519531 116.34375 L 87.113281 96.480469 L 87.109375 136.207031 Z M 164.207031 133.273438 L 198.617188 113.40625 L 233.023438 133.273438 L 198.617188 153.136719 Z M 164.207031 133.273438 "
            fillOpacity="1"
            fillRule="evenodd"
            className="svg-elem-6"
          />
        </g>
        <g fill="#3364cf" fillOpacity="1">
          <g transform="translate(63.022643, 322.086074)">
            <g>
              <path
                d="M 11.203125 0.40625 C 9.347656 0.40625 7.664062 -0.00390625 6.15625 -0.828125 C 4.644531 -1.648438 3.453125 -2.796875 2.578125 -4.265625 C 1.710938 -5.742188 1.28125 -7.445312 1.28125 -9.375 C 1.28125 -11.351562 1.738281 -13.097656 2.65625 -14.609375 C 3.570312 -16.128906 4.832031 -17.320312 6.4375 -18.1875 C 8.050781 -19.050781 9.894531 -19.484375 11.96875 -19.484375 C 14.03125 -19.484375 15.863281 -19.046875 17.46875 -18.171875 C 19.082031 -17.296875 20.34375 -16.085938 21.25 -14.546875 C 22.164062 -13.003906 22.625 -11.210938 22.625 -9.171875 L 22.625 0 L 17.421875 0 L 17.3125 -1.96875 C 16.550781 -1.1875 15.640625 -0.59375 14.578125 -0.1875 C 13.523438 0.207031 12.398438 0.40625 11.203125 0.40625 Z M 11.96875 -4.453125 C 13.394531 -4.453125 14.566406 -4.910156 15.484375 -5.828125 C 16.398438 -6.742188 16.859375 -7.960938 16.859375 -9.484375 C 16.859375 -11.023438 16.390625 -12.257812 15.453125 -13.1875 C 14.523438 -14.125 13.351562 -14.59375 11.9375 -14.59375 C 10.507812 -14.59375 9.332031 -14.125 8.40625 -13.1875 C 7.488281 -12.257812 7.03125 -11.035156 7.03125 -9.515625 C 7.03125 -7.972656 7.492188 -6.742188 8.421875 -5.828125 C 9.359375 -4.910156 10.539062 -4.453125 11.96875 -4.453125 Z M 11.96875 -4.453125 "
                className="svg-elem-7"
              />
            </g>
          </g>
        </g>
        <g fill="#3364cf" fillOpacity="1">
          <g transform="translate(95.777453, 322.086074)">
            <g>
              <path
                d="M 7.65625 5.890625 L 1.890625 5.890625 L 1.890625 -9.171875 C 1.890625 -11.210938 2.347656 -13.003906 3.265625 -14.546875 C 4.191406 -16.085938 5.453125 -17.296875 7.046875 -18.171875 C 8.648438 -19.046875 10.484375 -19.484375 12.546875 -19.484375 C 14.617188 -19.484375 16.457031 -19.050781 18.0625 -18.1875 C 19.675781 -17.320312 20.941406 -16.128906 21.859375 -14.609375 C 22.785156 -13.097656 23.25 -11.351562 23.25 -9.375 C 23.25 -7.445312 22.804688 -5.742188 21.921875 -4.265625 C 21.035156 -2.796875 19.84375 -1.648438 18.34375 -0.828125 C 16.851562 -0.00390625 15.175781 0.40625 13.3125 0.40625 C 12.300781 0.40625 11.300781 0.253906 10.3125 -0.046875 C 9.320312 -0.359375 8.4375 -0.847656 7.65625 -1.515625 Z M 12.546875 -4.453125 C 13.972656 -4.453125 15.148438 -4.910156 16.078125 -5.828125 C 17.015625 -6.742188 17.484375 -7.972656 17.484375 -9.515625 C 17.484375 -11.035156 17.019531 -12.257812 16.09375 -13.1875 C 15.175781 -14.125 14.007812 -14.59375 12.59375 -14.59375 C 11.164062 -14.59375 9.984375 -14.125 9.046875 -13.1875 C 8.117188 -12.257812 7.65625 -11.023438 7.65625 -9.484375 C 7.65625 -7.960938 8.113281 -6.742188 9.03125 -5.828125 C 9.957031 -4.910156 11.128906 -4.453125 12.546875 -4.453125 Z M 12.546875 -4.453125 "
                className="svg-elem-8"
              />
            </g>
          </g>
        </g>
        <g fill="#3364cf" fillOpacity="1">
          <g transform="translate(128.532263, 322.086074)">
            <g>
              <path
                d="M 11.9375 0.40625 C 9.882812 0.40625 8.050781 -0.0195312 6.4375 -0.875 C 4.832031 -1.738281 3.570312 -2.921875 2.65625 -4.421875 C 1.738281 -5.929688 1.28125 -7.640625 1.28125 -9.546875 C 1.28125 -11.484375 1.738281 -13.195312 2.65625 -14.6875 C 3.570312 -16.1875 4.835938 -17.359375 6.453125 -18.203125 C 8.078125 -19.054688 9.914062 -19.484375 11.96875 -19.484375 C 14.03125 -19.484375 15.859375 -19.054688 17.453125 -18.203125 C 19.054688 -17.359375 20.316406 -16.1875 21.234375 -14.6875 C 22.160156 -13.195312 22.625 -11.5 22.625 -9.59375 C 22.625 -7.675781 22.160156 -5.957031 21.234375 -4.4375 C 20.316406 -2.925781 19.050781 -1.738281 17.4375 -0.875 C 15.832031 -0.0195312 14 0.40625 11.9375 0.40625 Z M 11.96875 -4.484375 C 13.394531 -4.484375 14.566406 -4.945312 15.484375 -5.875 C 16.398438 -6.8125 16.859375 -8.035156 16.859375 -9.546875 C 16.859375 -11.085938 16.390625 -12.316406 15.453125 -13.234375 C 14.523438 -14.160156 13.351562 -14.625 11.9375 -14.625 C 10.53125 -14.625 9.359375 -14.160156 8.421875 -13.234375 C 7.492188 -12.316406 7.03125 -11.113281 7.03125 -9.625 C 7.03125 -8.082031 7.492188 -6.835938 8.421875 -5.890625 C 9.359375 -4.953125 10.539062 -4.484375 11.96875 -4.484375 Z M 11.96875 -4.484375 "
                className="svg-elem-9"
              />
            </g>
          </g>
        </g>
        <g fill="#3364cf" fillOpacity="1">
          <g transform="translate(160.666516, 322.086074)">
            <g>
              <path
                d="M 7.859375 0 L 2.171875 0 L 2.171875 -25.453125 L 7.859375 -25.453125 Z M 7.859375 0 "
                className="svg-elem-10"
              />
            </g>
          </g>
        </g>
        <g fill="#3364cf" fillOpacity="1">
          <g transform="translate(178.941522, 322.086074)">
            <g>
              <path
                d="M 11.9375 0.40625 C 9.882812 0.40625 8.050781 -0.0195312 6.4375 -0.875 C 4.832031 -1.738281 3.570312 -2.921875 2.65625 -4.421875 C 1.738281 -5.929688 1.28125 -7.640625 1.28125 -9.546875 C 1.28125 -11.484375 1.738281 -13.195312 2.65625 -14.6875 C 3.570312 -16.1875 4.835938 -17.359375 6.453125 -18.203125 C 8.078125 -19.054688 9.914062 -19.484375 11.96875 -19.484375 C 14.03125 -19.484375 15.859375 -19.054688 17.453125 -18.203125 C 19.054688 -17.359375 20.316406 -16.1875 21.234375 -14.6875 C 22.160156 -13.195312 22.625 -11.5 22.625 -9.59375 C 22.625 -7.675781 22.160156 -5.957031 21.234375 -4.4375 C 20.316406 -2.925781 19.050781 -1.738281 17.4375 -0.875 C 15.832031 -0.0195312 14 0.40625 11.9375 0.40625 Z M 11.96875 -4.484375 C 13.394531 -4.484375 14.566406 -4.945312 15.484375 -5.875 C 16.398438 -6.8125 16.859375 -8.035156 16.859375 -9.546875 C 16.859375 -11.085938 16.390625 -12.316406 15.453125 -13.234375 C 14.523438 -14.160156 13.351562 -14.625 11.9375 -14.625 C 10.53125 -14.625 9.359375 -14.160156 8.421875 -13.234375 C 7.492188 -12.316406 7.03125 -11.113281 7.03125 -9.625 C 7.03125 -8.082031 7.492188 -6.835938 8.421875 -5.890625 C 9.359375 -4.953125 10.539062 -4.484375 11.96875 -4.484375 Z M 11.96875 -4.484375 "
                className="svg-elem-11"
              />
            </g>
          </g>
        </g>
        <g fill="#3364cf" fillOpacity="1">
          <g transform="translate(211.075772, 322.086074)">
            <g>
              <path
                d="M 27.890625 -19.0625 L 33.625 -19.0625 L 33.625 -9.828125 C 33.625 -7.785156 33.226562 -5.992188 32.4375 -4.453125 C 31.644531 -2.910156 30.546875 -1.710938 29.140625 -0.859375 C 27.734375 -0.015625 26.113281 0.40625 24.28125 0.40625 C 22.894531 0.40625 21.628906 0.132812 20.484375 -0.40625 C 19.335938 -0.957031 18.429688 -1.695312 17.765625 -2.625 C 17.097656 -1.695312 16.1875 -0.957031 15.03125 -0.40625 C 13.882812 0.132812 12.617188 0.40625 11.234375 0.40625 C 9.421875 0.40625 7.804688 -0.015625 6.390625 -0.859375 C 4.984375 -1.710938 3.878906 -2.910156 3.078125 -4.453125 C 2.285156 -5.992188 1.890625 -7.785156 1.890625 -9.828125 L 1.890625 -19.0625 L 7.625 -19.0625 L 7.625 -8.890625 C 7.625 -7.585938 7.960938 -6.519531 8.640625 -5.6875 C 9.316406 -4.863281 10.179688 -4.453125 11.234375 -4.453125 C 12.316406 -4.453125 13.195312 -4.863281 13.875 -5.6875 C 14.550781 -6.519531 14.890625 -7.585938 14.890625 -8.890625 L 14.890625 -19.0625 L 20.625 -19.0625 L 20.625 -8.890625 C 20.625 -7.585938 20.960938 -6.519531 21.640625 -5.6875 C 22.316406 -4.863281 23.195312 -4.453125 24.28125 -4.453125 C 25.332031 -4.453125 26.195312 -4.863281 26.875 -5.6875 C 27.550781 -6.519531 27.890625 -7.585938 27.890625 -8.890625 Z M 27.890625 -19.0625 "
                className="svg-elem-12"
              />
            </g>
          </g>
        </g>
        <g fill="#3364cf" fillOpacity="1">
          <g transform="translate(254.828354, 322.086074)">
            <g>
              <path
                d="M 11.203125 0.40625 C 9.347656 0.40625 7.664062 -0.00390625 6.15625 -0.828125 C 4.644531 -1.648438 3.453125 -2.796875 2.578125 -4.265625 C 1.710938 -5.742188 1.28125 -7.445312 1.28125 -9.375 C 1.28125 -11.351562 1.738281 -13.097656 2.65625 -14.609375 C 3.570312 -16.128906 4.832031 -17.320312 6.4375 -18.1875 C 8.050781 -19.050781 9.894531 -19.484375 11.96875 -19.484375 C 14.03125 -19.484375 15.863281 -19.046875 17.46875 -18.171875 C 19.082031 -17.296875 20.34375 -16.085938 21.25 -14.546875 C 22.164062 -13.003906 22.625 -11.210938 22.625 -9.171875 L 22.625 0 L 17.421875 0 L 17.3125 -1.96875 C 16.550781 -1.1875 15.640625 -0.59375 14.578125 -0.1875 C 13.523438 0.207031 12.398438 0.40625 11.203125 0.40625 Z M 11.96875 -4.453125 C 13.394531 -4.453125 14.566406 -4.910156 15.484375 -5.828125 C 16.398438 -6.742188 16.859375 -7.960938 16.859375 -9.484375 C 16.859375 -11.023438 16.390625 -12.257812 15.453125 -13.1875 C 14.523438 -14.125 13.351562 -14.59375 11.9375 -14.59375 C 10.507812 -14.59375 9.332031 -14.125 8.40625 -13.1875 C 7.488281 -12.257812 7.03125 -11.035156 7.03125 -9.515625 C 7.03125 -7.972656 7.492188 -6.742188 8.421875 -5.828125 C 9.359375 -4.910156 10.539062 -4.453125 11.96875 -4.453125 Z M 11.96875 -4.453125 "
                className="svg-elem-13"
              />
            </g>
          </g>
        </g>
        <g fill="#3364cf" fillOpacity="1">
          <g transform="translate(287.583169, 322.086074)">
            <g>
              <path
                d="M 7.59375 0 L 1.890625 0 L 1.890625 -9.6875 C 1.890625 -11.644531 2.304688 -13.359375 3.140625 -14.828125 C 3.984375 -16.296875 5.113281 -17.4375 6.53125 -18.25 C 7.945312 -19.070312 9.515625 -19.484375 11.234375 -19.484375 C 12.660156 -19.484375 13.914062 -19.28125 15 -18.875 C 16.082031 -18.476562 17.046875 -17.910156 17.890625 -17.171875 L 15.140625 -13.28125 C 14.835938 -13.601562 14.398438 -13.90625 13.828125 -14.1875 C 13.253906 -14.476562 12.578125 -14.625 11.796875 -14.625 C 10.410156 -14.625 9.363281 -14.1875 8.65625 -13.3125 C 7.945312 -12.4375 7.59375 -11.273438 7.59375 -9.828125 Z M 7.59375 0 "
                className="svg-elem-14"
              />
            </g>
          </g>
        </g>
        <g fill="#3364cf" fillOpacity="1">
          <g transform="translate(313.822074, 322.086074)">
            <g>
              <path
                d="M 12.171875 -4.40625 C 13.753906 -4.40625 15.316406 -4.9375 16.859375 -6 L 19.109375 -2 C 17.835938 -1.082031 16.628906 -0.457031 15.484375 -0.125 C 14.335938 0.207031 13.050781 0.375 11.625 0.375 C 9.6875 0.375 7.9375 -0.03125 6.375 -0.84375 C 4.8125 -1.65625 3.570312 -2.800781 2.65625 -4.28125 C 1.738281 -5.769531 1.28125 -7.523438 1.28125 -9.546875 C 1.28125 -11.066406 1.554688 -12.4375 2.109375 -13.65625 C 2.660156 -14.875 3.414062 -15.921875 4.375 -16.796875 C 5.34375 -17.671875 6.445312 -18.335938 7.6875 -18.796875 C 8.925781 -19.253906 10.238281 -19.484375 11.625 -19.484375 C 13.019531 -19.484375 14.328125 -19.296875 15.546875 -18.921875 C 16.765625 -18.554688 17.953125 -17.9375 19.109375 -17.0625 L 16.796875 -12.96875 C 15.992188 -13.5625 15.226562 -13.988281 14.5 -14.25 C 13.78125 -14.519531 12.992188 -14.65625 12.140625 -14.65625 C 11.015625 -14.65625 10.03125 -14.394531 9.1875 -13.875 C 8.351562 -13.363281 7.765625 -12.613281 7.421875 -11.625 L 14.546875 -11.625 L 14.546875 -7.96875 L 7.234375 -7.96875 C 7.535156 -6.84375 8.128906 -5.96875 9.015625 -5.34375 C 9.898438 -4.71875 10.953125 -4.40625 12.171875 -4.40625 Z M 12.171875 -4.40625 "
                className="svg-elem-15"
              />
            </g>
          </g>
        </g>
        <g fill="#3364cf" fillOpacity="1">
          <g transform="translate(193.199978, 371.739011)">
            <g>
              {/* Grupo vacío para mantener la consistencia */}
            </g>
          </g>
        </g>
      </svg>
    </div>
  );
};

// ============ COMPONENTE PRINCIPAL ============
export default function LoginRegisterPage() {
  const router = useRouter();
  const [isFlipped, setIsFlipped] = useState(false);
  const [loginUsername, setLoginUsername] = useState("");
  const [loginPassword, setLoginPassword] = useState("");
  const [rememberMe, setRememberMe] = useState(false);
  const [loginError, setLoginError] = useState("");
  const [regUsername, setRegUsername] = useState("");
  const [regEmail, setRegEmail] = useState("");
  const [regPassword, setRegPassword] = useState("");
  const [regConfirm, setRegConfirm] = useState("");
  const [regError, setRegError] = useState("");

  const handleLogin = async (e: React.FormEvent) => {
    e.preventDefault();
    setLoginError("");
    try {
      await fakeLogin(loginUsername, loginPassword);
      router.push("/dashboard");
    } catch (err: any) {
      setLoginError(err.message || "Error al iniciar sesión");
    }
  };

  const handleRegister = async (e: React.FormEvent) => {
    e.preventDefault();
    setRegError("");
    if (regPassword !== regConfirm) {
      setRegError("Las contraseñas no coinciden");
      return;
    }
    try {
      await fakeRegister(regUsername, regEmail, regPassword);
      setIsFlipped(false);
    } catch (err: any) {
      setRegError(err.message || "Error al registrarse");
    }
  };

  return (
    <PageWrapper>
      <GlobalStyles />
      <LeftContainer>
        {/* Logo animado */}
        <AnimatedLogoInline />
      </LeftContainer>
      <CircleContainer>
        <Circle size={220} top="10%" left="40%" />
        <Circle size={150} top="30%" left="70%" />
        <Circle size={120} top="55%" left="50%" />
        <Circle size={80} top="75%" left="65%" />
      </CircleContainer>
      <FlipContainer>
        <FlipInner $isFlipped={isFlipped}>
          {/* CARA LOGIN */}
          <Side>
            <CardShape>
              <Title>WELCOME!!</Title>
              <Form onSubmit={handleLogin}>
                <InputGroup>
                  <IconHolder>
                    <svg width="16" height="16" fill="#999" viewBox="0 0 16 16">
                      <path d="M3 14s-1 0-1-1 1-4 6-4 6 3 6 4-1 1-1 1H3Zm5-6a3 3 0 1 0-3-3 3 3 0 0 0 3 3Z" />
                    </svg>
                  </IconHolder>
                  <Input
                    type="text"
                    placeholder="Username"
                    value={loginUsername}
                    onChange={(e) => setLoginUsername(e.target.value)}
                    required
                  />
                </InputGroup>
                <InputGroup>
                  <IconHolder>
                    <svg width="16" height="16" fill="#999" viewBox="0 0 16 16">
                      <path d="M8 4a3 3 0 0 0-3 3v1H4a2 2 0 0 0-2 2v3a2 2 0 0 0 2 2h8a2 2 0 0 0 2-2v-3a2 2 0 0 0-2-2h-1V7a3 3 0 0 0-3-3z" />
                    </svg>
                  </IconHolder>
                  <Input
                    type="password"
                    placeholder="Password"
                    value={loginPassword}
                    onChange={(e) => setLoginPassword(e.target.value)}
                    required
                  />
                </InputGroup>
                <CheckRow>
                  <label>
                    <Bullet
                      type="radio"
                      checked={rememberMe}
                      onChange={() => setRememberMe(!rememberMe)}
                    />
                    <span>Remember me</span>
                  </label>
                  <span>Forgot password?</span>
                </CheckRow>
                {loginError && <ErrorMessage>{loginError}</ErrorMessage>}
                <PrimaryButton type="submit">Login</PrimaryButton>
              </Form>
              <SecondaryText>
                Don’t have an account?{" "}
                <span onClick={() => setIsFlipped(true)}>Sign Up</span>
              </SecondaryText>
              <OrText>Or with</OrText>
              <SocialRow>
                <SocialButton>Google</SocialButton>
                <SocialButton>Apple</SocialButton>
              </SocialRow>
            </CardShape>
          </Side>
          {/* CARA REGISTER */}
          <Side style={{ transform: "rotateY(180deg)" }}>
            <CardShape>
              <Title>Sign Up</Title>
              <Form onSubmit={handleRegister}>
                <InputGroup>
                  <IconHolder>
                    <svg width="16" height="16" fill="#999" viewBox="0 0 16 16">
                      <path d="M3 14s-1 0-1-1 1-4 6-4 6 3 6 4-1 1-1 1H3Zm5-6a3 3 0 1 0-3-3 3 3 0 0 0 3 3Z" />
                    </svg>
                  </IconHolder>
                  <Input
                    type="text"
                    placeholder="Username"
                    value={regUsername}
                    onChange={(e) => setRegUsername(e.target.value)}
                    required
                  />
                </InputGroup>
                <InputGroup>
                  <IconHolder>
                    <svg width="16" height="16" fill="#999" viewBox="0 0 16 16">
                      <path d="M0 4a2 2 0 0 1 2-2h12a2 2 0 0 1 2 2v8a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2V4zm2-.5a.5.5 0 0 0-.5.5v.217l6 3.6 6-3.6V4a.5.5 0 0 0-.5-.5H2zm12 2.383-5.28 3.168a.5.5 0 0 1-.44 0L3 5.883V12a.5.5 0 0 0 .5.5h9a.5.5 0 0 0 .5-.5V5.883z"/>
                    </svg>
                  </IconHolder>
                  <Input
                    type="email"
                    placeholder="Email"
                    value={regEmail}
                    onChange={(e) => setRegEmail(e.target.value)}
                    required
                  />
                </InputGroup>
                <InputGroup>
                  <IconHolder>
                    <svg width="16" height="16" fill="#999" viewBox="0 0 16 16">
                      <path d="M8 4a3 3 0 0 0-3 3v1H4a2 2 0 0 0-2 2v3a2 2 0 0 0 2 2h8a2 2 0 0 0 2-2v-3a2 2 0 0 0-2-2h-1V7a3 3 0 0 0-3-3z" />
                    </svg>
                  </IconHolder>
                  <Input
                    type="password"
                    placeholder="Password"
                    value={regPassword}
                    onChange={(e) => setRegPassword(e.target.value)}
                    required
                  />
                </InputGroup>
                <InputGroup>
                  <IconHolder>
                    <svg width="16" height="16" fill="#999" viewBox="0 0 16 16">
                      <path d="M8 4a3 3 0 0 0-3 3v1H4a2 2 0 0 0-2 2v3a2 2 0 0 0 2 2h8a2 2 0 0 0 2-2v-3a2 2 0 0 0-2-2h-1V7a3 3 0 0 0-3-3z" />
                    </svg>
                  </IconHolder>
                  <Input
                    type="password"
                    placeholder="Confirm password"
                    value={regConfirm}
                    onChange={(e) => setRegConfirm(e.target.value)}
                    required
                  />
                </InputGroup>
                {regError && <ErrorMessage>{regError}</ErrorMessage>}
                <ButtonsRow>
                  <PrimaryButton type="submit">Sign Up</PrimaryButton>
                  <SecondaryBtn type="button" onClick={() => setIsFlipped(false)}>
                    Login
                  </SecondaryBtn>
                </ButtonsRow>
              </Form>
            </CardShape>
          </Side>
        </FlipInner>
      </FlipContainer>
    </PageWrapper>
  );
}

/* ===================== ESTILOS ===================== */
const PageWrapper = styled.div`
  position: relative;
  width: 100%;
  min-height: 100vh;
  background: #fff;
  overflow: hidden;
  font-family: sans-serif;
`;

const LeftContainer = styled.div`
  position: absolute;
  left: 13%;
  top: 45%;
  transform: translateY(-50%);
  display: flex;
  align-items: center;
  justify-content: center;
`;

const CircleContainer = styled.div`
  position: absolute;
  right: 0;
  top: 0;
  bottom: 0;
  width: 50%;
  pointer-events: none;
  z-index: 1;
`;

interface CircleProps {
  size: number;
  top: string;
  left: string;
}

const Circle = styled.div<CircleProps>`
  position: absolute;
  width: ${(p) => p.size}px;
  height: ${(p) => p.size}px;
  border-radius: 50%;
  background: #d9ecff;
  top: ${(p) => p.top};
  left: ${(p) => p.left};
  opacity: 0.8;
`;

const FlipContainer = styled.div`
  position: absolute;
  right: 10%;
  top: 50%;
  transform: translateY(-50%);
  width: 340px;
  height: 480px;
  perspective: 1000px;
  z-index: 2;
`;

const FlipInner = styled.div<{ $isFlipped: boolean }>`
  position: relative;
  width: 100%;
  height: 100%;
  transition: transform 0.8s cubic-bezier(0.45, 0.05, 0.55, 0.95);
  transform-style: preserve-3d;
  transform: ${(props) => (props.$isFlipped ? "rotateY(180deg)" : "none")};
`;

const Side = styled.div`
  position: absolute;
  width: 100%;
  height: 100%;
  backface-visibility: hidden;
`;

const CardShape = styled.div`
  width: 100%;
  height: 100%;
  padding: 2rem;
  background: #fff;
  border-radius: 0 50px 50px 0;
  box-shadow: 0 6px 18px rgba(0, 0, 0, 0.15);
`;

const Title = styled.h2`
  margin: 0 0 1rem;
  font-weight: bold;
  color: #333;
  text-align: center;
`;

const Form = styled.form`
  display: flex;
  flex-direction: column;
  gap: 0.75rem;
`;

const InputGroup = styled.div`
  position: relative;
  display: flex;
  align-items: center;
`;

const IconHolder = styled.span`
  position: absolute;
  left: 10px;
  font-size: 14px;
  color: #999;
  display: flex;
  align-items: center;
`;

const Input = styled.input`
  width: 100%;
  padding: 0.6rem 0.6rem 0.6rem 2rem;
  border-radius: 8px;
  border: 1px solid #ccc;
  font-size: 14px;
  outline: none;
  color: #333;
  &::placeholder {
    color: #999;
  }
`;

const Bullet = styled.input`
  margin-right: 4px;
`;

const CheckRow = styled.div`
  display: flex;
  align-items: center;
  justify-content: space-between;
  font-size: 14px;
  color: #333;
  margin: 0.5rem 0;
  span {
    cursor: pointer;
  }
`;

const ErrorMessage = styled.div`
  font-size: 13px;
  color: red;
  margin-top: -4px;
`;

const PrimaryButton = styled.button`
  padding: 0.6rem;
  border: none;
  border-radius: 20px;
  background: #5ed7e8;
  color: #fff;
  font-weight: bold;
  font-size: 14px;
  cursor: pointer;
  transition: 0.3s;
  &:hover {
    opacity: 0.9;
  }
`;

const ButtonsRow = styled.div`
  display: flex;
  gap: 0.5rem;
  margin-top: 0.5rem;
`;

const SecondaryBtn = styled.button`
  flex: 1;
  padding: 0.6rem;
  border: 2px solid #5ed7e8;
  border-radius: 20px;
  background: transparent;
  color: #5ed7e8;
  font-weight: bold;
  font-size: 14px;
  cursor: pointer;
  transition: 0.3s;
  &:hover {
    background: #e2fbfd;
  }
`;

const SecondaryText = styled.div`
  margin: 0.5rem 0;
  font-size: 14px;
  text-align: center;
  color: #333;
  span {
    color: #666;
    text-decoration: underline;
    cursor: pointer;
    margin-left: 5px;
  }
`;

const OrText = styled.div`
  text-align: center;
  margin: 0.5rem 0;
  font-size: 14px;
  color: #666;
`;

const SocialRow = styled.div`
  display: flex;
  gap: 0.5rem;
`;

const SocialButton = styled.button`
  flex: 1;
  padding: 0.6rem;
  border: 1px solid #ccc;
  border-radius: 20px;
  background: #fff;
  font-size: 14px;
  font-weight: bold;
  color: #333;
  cursor: pointer;
  &:hover {
    background: #f2f2f2;
  }
`;
